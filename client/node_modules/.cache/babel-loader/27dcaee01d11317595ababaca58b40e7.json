{"ast":null,"code":"import firebase from \"firebase/compat/app\";\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/compat/firestore\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/compat/auth\";\nconst config = {\n  apiKey: \"AIzaSyCUfX87aovM3kzYdUfUnqvU8w2h59duiYk\",\n  authDomain: \"e-commerce-db-5b8c4.firebaseapp.com\",\n  projectId: \"e-commerce-db-5b8c4\",\n  storageBucket: \"e-commerce-db-5b8c4.appspot.com\",\n  messagingSenderId: \"733116885612\",\n  appId: \"1:733116885612:web:edffa5cc6d8dab86018649\",\n  measurementId: \"G-TYJHFQNH8L\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; // const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const userRef = doc(firestore, \"users\", userAuth.uid); // const snapShot = await userRef.get();\n\n  const snapShopt = await getDoc(userRef);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(`error creating user, ${error.message}`);\n    }\n  }\n\n  return snapShot;\n};\nfirebase.initializeApp(config);\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => signInWithPopup(auth, googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/Users/santilaight/Documents/santilaight.io/complete-react-developer-ztm/clothing-e-commerce/src/firebase/firebase.utils.js"],"names":["firebase","getFirestore","doc","getDoc","setDoc","getAuth","GoogleAuthProvider","signInWithPopup","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","uid","snapShopt","snapShot","exists","displayName","email","createdAt","Date","error","console","log","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","set","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","auth","googleProvider","setCustomParameters","prompt","signInWithGoogle"],"mappings":"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","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/compat/firestore\";\nimport {\n  getAuth,\n  GoogleAuthProvider,\n  signInWithPopup,\n} from \"firebase/compat/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyCUfX87aovM3kzYdUfUnqvU8w2h59duiYk\",\n  authDomain: \"e-commerce-db-5b8c4.firebaseapp.com\",\n  projectId: \"e-commerce-db-5b8c4\",\n  storageBucket: \"e-commerce-db-5b8c4.appspot.com\",\n  messagingSenderId: \"733116885612\",\n  appId: \"1:733116885612:web:edffa5cc6d8dab86018649\",\n  measurementId: \"G-TYJHFQNH8L\",\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  // const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const userRef = doc(firestore, \"users\", userAuth.uid);\n  // const snapShot = await userRef.get();\n  const snapShopt = await getDoc(userRef);\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log(`error creating user, ${error.message}`);\n    }\n  }\n\n  return snapShot;\n};\n\nfirebase.initializeApp(config);\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach((obj) => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollection = collections.docs.map((doc) => {\n    const { title, items } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items,\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const signInWithGoogle = () => signInWithPopup(auth, googleProvider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}